{"ast":null,"code":"var _jsxFileName = \"/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/leftSection/transactional.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateName, getSelectedEventMeta, getSelectedFields, getProcessedRecordsCount, getPersistanceTimeRecord, getSqoopData, getMaxwellData, getMongoData } from '../../../actions/dataActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Transactional() {\n  _s();\n\n  const transactionalEvents = useSelector(state => state.dataReducer.transactionalEvents);\n  const selectedTenant = useSelector(state => state.dataReducer.selectedTenant);\n  const selectedEvent = useSelector(state => state.dataReducer.selectedEvent);\n  const highlightedEvent = useSelector(state => state.dataReducer.highlightedEvent);\n  const events = useSelector(state => state.dataReducer.selectedEventMeta[0]);\n  useEffect(() => {\n    let name = events.name; // console.log(name, 'events xxxxx', selectedTenant)\n    // let tenantId = events.data[0].tenantId\n\n    if (events && events['ingestionStrategy'] !== undefined && events['ingestionStrategy'] !== null) {\n      if (events['ingestionStrategy'].toLowerCase() === 'maxwell') {\n        // console.log(events['ingestionStrategy'], 'events maxwell')\n        dispatch(getMaxwellData(selectedTenant, name));\n      }\n    }\n\n    if (events != undefined && events['ingestionStrategy'] !== undefined && events['ingestionStrategy'] !== null) {\n      if (events['ingestionStrategy'].toLowerCase() === 'sqoop') {\n        // console.log(events['ingestionStrategy'], 'events sqoop')\n        dispatch(getSqoopData(selectedTenant, name));\n      }\n    }\n\n    if (events != undefined && events['sourceType'] !== undefined && events['sourceType'] !== null) {\n      var _events$sourceType;\n\n      if (((_events$sourceType = events['sourceType']) === null || _events$sourceType === void 0 ? void 0 : _events$sourceType.toLowerCase()) == 'mongo') {\n        // console.log(events['ingestionStrategy'], 'events sqoop')\n        dispatch(getMongoData(selectedTenant, name));\n      }\n    }\n  }, [events]);\n  const dispatch = useDispatch();\n\n  const handleOnClick = e => {\n    console.log(e, 'left section s....');\n    dispatch(updateName(e));\n    dispatch(getProcessedRecordsCount(selectedTenant, e));\n    dispatch(getPersistanceTimeRecord(selectedTenant, e, 7));\n    dispatch(getSelectedEventMeta(selectedTenant, e));\n    dispatch(getSelectedFields(selectedTenant, e)); // dispatch(getMaxwellData(selectedTenant, e))\n    // dispatch(getSqoopData(selectedTenant, e))\n  };\n\n  const giveClassNames = name => {\n    if (name === selectedEvent) {\n      if (name === highlightedEvent) {\n        return \"highlighted active\";\n      } else {\n        return \"active\";\n      }\n    } else {\n      return \"inactive\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactionalEvents.map(item => {\n      const classNames = giveClassNames(item.name);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\",\n        onClick: () => handleOnClick(item.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classNames,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(Transactional, \"+VW2/Ny5icLepka9vuTT0w9v9T4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Transactional;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactional\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","updateName","getSelectedEventMeta","getSelectedFields","getProcessedRecordsCount","getPersistanceTimeRecord","getSqoopData","getMaxwellData","getMongoData","Transactional","transactionalEvents","state","dataReducer","selectedTenant","selectedEvent","highlightedEvent","events","selectedEventMeta","name","undefined","toLowerCase","dispatch","handleOnClick","e","console","log","giveClassNames","map","item","classNames"],"sources":["/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/leftSection/transactional.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n    updateName,\n    getSelectedEventMeta,\n    getSelectedFields,\n    getProcessedRecordsCount,\n    getPersistanceTimeRecord,\n    getSqoopData,\n    getMaxwellData,\n    getMongoData,\n} from '../../../actions/dataActions'\n\nexport default function Transactional() {\n    const transactionalEvents = useSelector((state) => state.dataReducer.transactionalEvents)\n    const selectedTenant = useSelector((state) => state.dataReducer.selectedTenant)\n    const selectedEvent = useSelector((state) => state.dataReducer.selectedEvent)\n    const highlightedEvent = useSelector((state) => state.dataReducer.highlightedEvent)\n    const events = useSelector((state) => state.dataReducer.selectedEventMeta[0])\n\n    useEffect(() => {\n        let name = events.name\n        // console.log(name, 'events xxxxx', selectedTenant)\n        // let tenantId = events.data[0].tenantId\n        if (events && events['ingestionStrategy'] !== undefined && events['ingestionStrategy'] !== null) {\n            if (events['ingestionStrategy'].toLowerCase() === 'maxwell') {\n                // console.log(events['ingestionStrategy'], 'events maxwell')\n                dispatch(getMaxwellData(selectedTenant, name))\n\n            }\n\n        }\n        if (events != undefined && events['ingestionStrategy'] !== undefined && events['ingestionStrategy'] !== null) {\n            if (events['ingestionStrategy'].toLowerCase() === 'sqoop') {\n                // console.log(events['ingestionStrategy'], 'events sqoop')\n                dispatch(getSqoopData(selectedTenant, name))\n\n            }\n        }\n        if (events != undefined && events['sourceType'] !== undefined && events['sourceType'] !== null) {\n            if (events['sourceType']?.toLowerCase() == 'mongo') {\n                // console.log(events['ingestionStrategy'], 'events sqoop')\n                dispatch(getMongoData(selectedTenant, name))\n\n            }\n        }\n\n    }, [events])\n\n    const dispatch = useDispatch()\n    const handleOnClick = (e) => {\n        console.log(e,'left section s....')\n\n        dispatch(updateName(e))\n        dispatch(getProcessedRecordsCount(selectedTenant, e))\n        dispatch(getPersistanceTimeRecord(selectedTenant, e,7))\n\n        dispatch(getSelectedEventMeta(selectedTenant, e))\n        dispatch(getSelectedFields(selectedTenant, e))\n        // dispatch(getMaxwellData(selectedTenant, e))\n        // dispatch(getSqoopData(selectedTenant, e))\n    }\n\n\n    const giveClassNames = (name) => {\n        if (name === selectedEvent) {\n            if (name === highlightedEvent) {\n                return (\"highlighted active\")\n            }\n            else {\n                return (\"active\")\n            }\n\n        }\n        else {\n            return (\"inactive\")\n        }\n    }\n\n\n    return (\n        <>\n            {\n                transactionalEvents.map((item) => {\n                    const classNames = giveClassNames(item.name)\n                    return (\n                        <div className=\"line\" onClick={() => handleOnClick(item.name)}>\n                            <div className=\"dot\"></div>\n                            <p className={classNames}>{item.name}</p>\n                        </div>\n                    )\n                }\n                )\n            }\n        </>\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}