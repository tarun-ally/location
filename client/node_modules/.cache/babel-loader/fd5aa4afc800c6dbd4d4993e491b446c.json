{"ast":null,"code":"// import {\n//     authenticationUrl,\n//     authenticationParam,\n//     backEndUrl,\n//     backEndUrlSSIP\n// } from \"../config\"\nvar axios=require('axios');// export const getEditJsonData=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'UPDATE_INPUT_DATA',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaData=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaDataOne=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_ONE',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaDataTwo=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_TWO',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchema=(fieldData) => {\n//     return (dispatch) => {\n//         // dispatch({\n//         //     type: 'GETTING_SCHEMA_UPDATING_META_RESPONSE',\n//         //     payload: metaData,\n//         // })\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_ONLY_SHOWING_RESPONSE',\n//             payload: fieldData,\n//         })\n//     }\n// }\nexport var getState=function getState(data){return function(dispatch){dispatch({type:'GETTING_STATE',payload:data});};};export var getCreatedNewEntits=function getCreatedNewEntits(data){console.log(data,'response');return function(dispatch){axios.post(\"http://localhost:8080/api/tutorials\",{data:data}).then(function(response){// let address={}\n// let state=[]\n// let array=response.data\n// for(let i=0; i<array.length; i++) {\n//     // address[array[i].location]=array[i].state\n//     address[array[i].state]=array[i].location\n//     state.push({'label': array[i].state,'value': array[i].state})\n// }\n// console.log(state,'state',address,'address');\ndispatch({type:'GETTING_CREATED_RESPONSE',payload:response.data});// dispatch({\n//     type: 'GETTING_STATE',\n//     payload: state\n// })\n// dispatch({\n//     type: 'GETTING_ADDRESS',\n//     payload: address\n// })\n}).catch(function(error){var showError=error.toString();});};};export var getUpdatingExistingState=function getUpdatingExistingState(id,data){console.log(data,'response');return function(dispatch){axios.put(\"http://localhost:8080/api/tutorials/\".concat(id),data).then(function(response){// let address={}\n// let state=[]\n// let array=response.data\n// for(let i=0; i<array.length; i++) {\n//     // address[array[i].location]=array[i].state\n//     address[array[i].state]=array[i].location\n//     state.push({'label': array[i].state,'value': array[i].state})\n// }\n// console.log(state,'state',address,'address');\ndispatch({type:'GETTING_RESPONSE_UPDATE',payload:response.data});}).catch(function(error){var showError=error.toString();});};};export var getDeleteExistingState=function getDeleteExistingState(id){// console.log(data,'response');\nreturn function(dispatch){axios.delete(\"http://localhost:8080/api/tutorials/\".concat(id)).then(function(response){// let address={}\n// let state=[]\n// let array=response.data\n// for(let i=0; i<array.length; i++) {\n//     // address[array[i].location]=array[i].state\n//     address[array[i].state]=array[i].location\n//     state.push({'label': array[i].state,'value': array[i].state})\n// }\n// console.log(state,'state',address,'address');\ndispatch({type:'GETTING_RESPONSE_DELETE',payload:response.data});// getPostingData()\n}).catch(function(error){var showError=error.toString();});};};export var getCreatedNewEntity=function getCreatedNewEntity(data){console.log(data,'response');return function(dispatch){dispatch({type:'GETTING_CREATED_RESPONSE',payload:data});};};export var getPostingData=function getPostingData(){return function(dispatch){axios.get(\"http://localhost:8080/api/tutorials\",{// params: authenticationParam\n}).then(function(response){var address={};var state=[];var stateID=[];var array=response.data;for(var i=0;i<array.length;i++){// address[array[i].location]=array[i].state\naddress[array[i].state]=array[i].location;stateID.push(array[i].id);state.push({'label':array[i].state,'value':array[i].state});// console.log(state,'state',address,'address');\n}dispatch({type:'GETTING_LOCATION_RESPONSE',payload:response.data});dispatch({type:'GETTING_STATE',payload:state});dispatch({type:'GETTING_STATE_ID',payload:stateID});dispatch({type:'GETTING_ADDRESS',payload:address});}).catch(function(error){var showError=error.toString();});};};","map":{"version":3,"names":["axios","require","getState","data","dispatch","type","payload","getCreatedNewEntits","console","log","post","then","response","catch","error","showError","toString","getUpdatingExistingState","id","put","getDeleteExistingState","delete","getCreatedNewEntity","getPostingData","get","address","state","stateID","array","i","length","location","push"],"sources":["/home/tarun/learning/myOwnProject/nodejs-express-mongodb/server/client/src/actions/dataActions.js"],"sourcesContent":["// import {\n//     authenticationUrl,\n//     authenticationParam,\n//     backEndUrl,\n//     backEndUrlSSIP\n// } from \"../config\"\n\nconst axios=require('axios')\n\n\n// export const getEditJsonData=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'UPDATE_INPUT_DATA',\n//             payload: data\n//         })\n\n//     }\n// }\n\n// export const getUpdatingSchemaData=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE',\n//             payload: data\n//         })\n\n//     }\n// }\n// export const getUpdatingSchemaDataOne=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_ONE',\n//             payload: data\n//         })\n\n//     }\n\n\n// }\n// export const getUpdatingSchemaDataTwo=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_TWO',\n//             payload: data\n//         })\n\n//     }\n// }\n\n// export const getUpdatingSchema=(fieldData) => {\n//     return (dispatch) => {\n\n//         // dispatch({\n//         //     type: 'GETTING_SCHEMA_UPDATING_META_RESPONSE',\n//         //     payload: metaData,\n\n//         // })\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_ONLY_SHOWING_RESPONSE',\n//             payload: fieldData,\n\n//         })\n\n//     }\n// }\nexport const getState=(data) => {\n    return (dispatch) => {\n        dispatch({\n            type: 'GETTING_STATE',\n            payload: data\n\n        })\n    }\n}\nexport const getCreatedNewEntits=(data) => {\n\n    console.log(data,'response');\n    return (dispatch) => {\n        axios.post(`http://localhost:8080/api/tutorials`,{data}\n\n        )\n            .then(response => {\n                // let address={}\n                // let state=[]\n\n                // let array=response.data\n                // for(let i=0; i<array.length; i++) {\n                //     // address[array[i].location]=array[i].state\n                //     address[array[i].state]=array[i].location\n\n                //     state.push({'label': array[i].state,'value': array[i].state})\n                // }\n                // console.log(state,'state',address,'address');\n                dispatch({\n                    type: 'GETTING_CREATED_RESPONSE',\n                    payload: response.data\n\n                })\n                // dispatch({\n                //     type: 'GETTING_STATE',\n                //     payload: state\n\n                // })\n                // dispatch({\n                //     type: 'GETTING_ADDRESS',\n                //     payload: address\n\n                // })\n\n\n            })\n            .catch(error => {\n\n                let showError=error.toString()\n\n            })\n    }\n}\n\nexport const getUpdatingExistingState=(id,data) => {\n\n    console.log(data,'response');\n    return (dispatch) => {\n        axios.put(`http://localhost:8080/api/tutorials/${id}`,data\n\n        )\n            .then(response => {\n                // let address={}\n                // let state=[]\n\n                // let array=response.data\n                // for(let i=0; i<array.length; i++) {\n                //     // address[array[i].location]=array[i].state\n                //     address[array[i].state]=array[i].location\n\n                //     state.push({'label': array[i].state,'value': array[i].state})\n                // }\n                // console.log(state,'state',address,'address');\n                dispatch({\n                    type: 'GETTING_RESPONSE_UPDATE',\n                    payload: response.data\n\n                })\n\n            })\n            .catch(error => {\n\n                let showError=error.toString()\n\n            })\n    }\n}\n\n\nexport const getDeleteExistingState=(id) => {\n\n    // console.log(data,'response');\n    return (dispatch) => {\n        axios.delete(`http://localhost:8080/api/tutorials/${id}`,\n\n        )\n            .then(response => {\n                // let address={}\n                // let state=[]\n\n                // let array=response.data\n                // for(let i=0; i<array.length; i++) {\n                //     // address[array[i].location]=array[i].state\n                //     address[array[i].state]=array[i].location\n\n                //     state.push({'label': array[i].state,'value': array[i].state})\n                // }\n                // console.log(state,'state',address,'address');\n                dispatch({\n                    type: 'GETTING_RESPONSE_DELETE',\n                    payload: response.data\n\n                })\n                // getPostingData()\n\n            })\n            .catch(error => {\n\n                let showError=error.toString()\n\n            })\n    }\n}\n\nexport const getCreatedNewEntity=(data) => {\n\n    console.log(data,'response');\n    return (dispatch) => {\n\n        dispatch({\n            type: 'GETTING_CREATED_RESPONSE',\n            payload: data\n\n        })\n\n\n\n    }\n}\n\nexport const getPostingData=() => {\n    return (dispatch) => {\n        axios.get(`http://localhost:8080/api/tutorials`,\n            {\n                // params: authenticationParam\n            }\n        )\n            .then(response => {\n\n\n                let address={}\n                let state=[]\n                let stateID=[]\n\n                let array=response.data\n                for(let i=0; i<array.length; i++) {\n                    // address[array[i].location]=array[i].state\n                    address[array[i].state]=array[i].location\n                    stateID.push(array[i].id)\n                    state.push({'label': array[i].state,'value': array[i].state})\n                    // console.log(state,'state',address,'address');\n                }\n                dispatch({\n                    type: 'GETTING_LOCATION_RESPONSE',\n                    payload: response.data\n\n                })\n                dispatch({\n                    type: 'GETTING_STATE',\n                    payload: state\n\n                })\n                dispatch({\n                    type: 'GETTING_STATE_ID',\n                    payload: stateID\n\n                })\n\n                dispatch({\n                    type: 'GETTING_ADDRESS',\n                    payload: address\n\n                })\n\n\n            })\n            .catch(error => {\n\n                let showError=error.toString()\n\n            })\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}