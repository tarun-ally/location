{"ast":null,"code":"var _jsxFileName = \"/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/rightSection/bottomModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { putFields } from '../../../actions/dataActions';\nimport \"./bottomModal.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BottomModal(props) {\n  _s();\n\n  const selectedFields = useSelector(state => state.dataReducer.selectedFields);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [inputData, setInputData] = useState(() => {\n    return JSON.parse(selectedFields[0].fields);\n  });\n  const [isPII, setIsPII] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleOnSubmit = () => {\n    let putBody = [...selectedFields][0];\n    putBody.fields = JSON.stringify(inputData); // console.log(putBody)\n\n    dispatch(putFields(putBody));\n    props.closeModal();\n  };\n\n  const handleInput = (e, checker, index) => {\n    setInputData(prevState => {\n      const newState = [...prevState];\n      newState[index][checker] = e.target.value;\n      return newState;\n    });\n  };\n\n  const PIIfunction = num => {\n    // console.log(num)\n    let e = {\n      target: {\n        value: null\n      }\n    };\n\n    if (isPII === \"No\") {\n      if (num === 1) {\n        e.target.value = \"Yes\";\n        setIsPII(\"Yes\");\n        handleInput(e, \"isPII\", activeIndex);\n      } else if (num === 2) {\n        e.target.value = \"\";\n        setIsPII(null);\n        handleInput(e, \"isPII\", activeIndex);\n      }\n    } else if (isPII === \"Yes\") {\n      if (num === 1) {\n        e.target.value = \"\";\n        setIsPII(null);\n        handleInput(e, \"isPII\", activeIndex);\n      } else if (num === 2) {\n        e.target.value = \"No\";\n        setIsPII(\"No\");\n        handleInput(e, \"isPII\", activeIndex);\n      }\n    } else if (isPII === null) {\n      if (num === 1) {\n        e.target.value = \"Yes\";\n        setIsPII(\"Yes\");\n        handleInput(e, \"isPII\", activeIndex);\n      } else if (num === 2) {\n        e.target.value = \"No\";\n        setIsPII(\"No\");\n        handleInput(e, \"isPII\", activeIndex);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields-list\",\n        children: inputData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `field-name ${activeIndex === index ? \"active\" : \"inactive\"}`,\n          onClick: () => {\n            setActiveIndex(index);\n          },\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-fields\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              style: {\n                width: \"400px\",\n                height: \"100px\"\n              },\n              onChange: e => handleInput(e, \"description\", activeIndex),\n              name: \"description\",\n              value: inputData[activeIndex].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BottomModal, \"SHM7VxinTDXS1nvFZtKleGcbVFw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BottomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"BottomModal\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","putFields","BottomModal","props","selectedFields","state","dataReducer","activeIndex","setActiveIndex","inputData","setInputData","JSON","parse","fields","isPII","setIsPII","dispatch","handleOnSubmit","putBody","stringify","closeModal","handleInput","e","checker","index","prevState","newState","target","value","PIIfunction","num","map","item","name","width","height","description"],"sources":["/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/rightSection/bottomModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { putFields } from '../../../actions/dataActions'\n\nimport \"./bottomModal.scss\"\nexport default function BottomModal(props) {\n    const selectedFields = useSelector((state) => state.dataReducer.selectedFields)\n    const [activeIndex, setActiveIndex] = useState(0)\n    const [inputData, setInputData] = useState(() => {\n        return (\n            JSON.parse(selectedFields[0].fields)\n        )\n    })\n    const [isPII, setIsPII] = useState(null)\n    const dispatch = useDispatch()\n\n\n    const handleOnSubmit = () => {\n        let putBody = [...selectedFields][0]\n        putBody.fields = JSON.stringify(inputData)\n        // console.log(putBody)\n        dispatch(putFields(putBody))\n        props.closeModal()\n    }\n\n\n    const handleInput = (e, checker, index) => {\n        setInputData((prevState) => {\n            const newState = [...prevState]\n            newState[index][checker] = e.target.value\n            return (\n                newState\n            )\n        })\n    }\n\n    const PIIfunction = (num) => {\n        // console.log(num)\n        let e = {\n            target: {\n                value: null\n            }\n        }\n        if (isPII === \"No\") {\n            if (num === 1) {\n                e.target.value = \"Yes\"\n                setIsPII(\"Yes\")\n                handleInput(e, \"isPII\", activeIndex)\n            }\n            else if (num === 2) {\n                e.target.value = \"\"\n                setIsPII(null)\n                handleInput(e, \"isPII\", activeIndex)\n            }\n\n        }\n        else if (isPII === \"Yes\") {\n            if (num === 1) {\n                e.target.value = \"\"\n                setIsPII(null)\n                handleInput(e, \"isPII\", activeIndex)\n\n            }\n            else if (num === 2) {\n                e.target.value = \"No\"\n                setIsPII(\"No\")\n                handleInput(e, \"isPII\", activeIndex)\n\n            }\n        }\n        else if (isPII === null) {\n            if (num === 1) {\n                e.target.value = \"Yes\"\n                setIsPII(\"Yes\")\n                handleInput(e, \"isPII\", activeIndex)\n\n            }\n            else if (num === 2) {\n                e.target.value = \"No\"\n                setIsPII(\"No\")\n                handleInput(e, \"isPII\", activeIndex)\n\n            }\n        }\n\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"editor-container\">\n                <div className=\"fields-list\">\n                    {\n                        inputData.map((item, index) =>\n                            <div className={`field-name ${activeIndex === index ? \"active\" : \"inactive\"}`} onClick={() => { setActiveIndex(index) }}>{item.name}</div>\n                        )\n                    }\n                </div>\n                <div>\n                    <div className=\"input-fields\">\n                        {/* <div className = \"input-row\">\n                            <p>Value Type</p>\n                            <input onChange = {(e) => handleInput(e,\"value_type\",activeIndex)} value = {inputData[activeIndex].value_type}></input>\n                        </div> */}\n                        <div className=\"input-row\">\n                            <p>Description</p>\n                            <textarea style={{ width: \"400px\", height: \"100px\" }} onChange={(e) => handleInput(e, \"description\", activeIndex)} name=\"description\" value={inputData[activeIndex].description}></textarea>\n                        </div>\n                        {/* <div className = \"input-row\">\n                            <p>Is PII ?</p>\n                            <div className = \"radio-row\">\n                                <input className = \"radio-input\" onClick = {() => PIIfunction(1)} name = \"isPII\" type = \"radio\" value = \"Yes\" checked = {inputData[activeIndex].isPII === \"Yes\"}></input>\n                                <span>Yes</span>\n                            </div>\n                            \n                            <div className = \"radio-row\">\n                                <input className = \"radio-input\" onClick = {() => PIIfunction(2)} name = \"isPII\" type = \"radio\" value = \"No\"  checked = {inputData[activeIndex].isPII === \"No\"}></input>\n                                <span>No</span>\n                            </div>\n                        </div>\n                        <div className = \"input-row\">\n                            <p>PII Type</p>\n                            <input onChange = {(e) => handleInput(e,\"PII_Type\",activeIndex)} value = {inputData[activeIndex].PII_Type}></input>\n                        </div> */}\n\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"submit-container\">\n                <button onClick={handleOnSubmit}>Submit</button>\n            </div>\n        </>\n\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}