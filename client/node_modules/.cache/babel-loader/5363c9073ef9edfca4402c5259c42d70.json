{"ast":null,"code":"var _jsxFileName = \"/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/leftSection/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './index.scss';\nimport { updateTenant, getAllTables, getClickStreamTables, getSummaryTables, getTransactionalTables, getStaleClickStreamTables, getStaleSummaryTables, getStaleTransactionalTables, getFreshClickStreamTables, getFreshSummaryTables, getFreshTransactionalTables, getProcessedRecords, updateName, getWebsiteList } from '../../../actions/dataActions';\nimport Summary from './summary';\nimport Transactional from './transactional';\nimport ClickStream from './clickStream';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeftSection() {\n  _s();\n\n  const behavioralEvents = useSelector(state => state.dataReducer.behavioralEvents);\n  const computedEvents = useSelector(state => state.dataReducer.computedEvents);\n  const transactionalEvents = useSelector(state => state.dataReducer.transactionalEvents);\n  const allWebsite = useSelector(state => state.dataReducer.allWebsite);\n  const dispatch = useDispatch();\n\n  const handleOnClick = e => {\n    // console.log(e.target.value,'event')\n    dispatch(updateTenant(e.target.value));\n    dispatch(getAllTables(e.target.value));\n    dispatch(getClickStreamTables(e.target.value));\n    dispatch(getSummaryTables(e.target.value));\n    dispatch(getTransactionalTables(e.target.value));\n    dispatch(getStaleClickStreamTables(e.target.value, 7));\n    dispatch(getStaleTransactionalTables(e.target.value, 7));\n    dispatch(getStaleSummaryTables(e.target.value, 7));\n    dispatch(getFreshClickStreamTables(e.target.value, 7));\n    dispatch(getFreshTransactionalTables(e.target.value, 7));\n    dispatch(getFreshSummaryTables(e.target.value, 7));\n    dispatch(getProcessedRecords(e.target.value, 1000000));\n    dispatch(updateName(\"\"));\n    const activeLegend = document.getElementsByClassName('active-legend')[0];\n    const dateSelector = document.getElementsByClassName('date-selector')[0];\n    const countSelector = document.getElementsByClassName('count-selector')[0];\n\n    if (activeLegend) {\n      activeLegend.className = 'inactive-legend';\n    }\n\n    if (dateSelector) {\n      dateSelector.value = '7';\n    }\n\n    if (countSelector) {\n      countSelector.value = '1000000';\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getClickStreamTables(1));\n    dispatch(getSummaryTables(1));\n    dispatch(getTransactionalTables(1));\n    dispatch(getAllTables(1));\n    dispatch(getWebsiteList());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), allWebsite && /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleOnClick,\n        children: Object.entries(allWebsite).map((item, index) => {\n          //  console.log(item[0],'item')\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item[0],\n            children: item[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 35\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Summary Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [computedEvents.length, \" Tables\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Summary, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Transactional Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [transactionalEvents.length, \" Tables\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Transactional, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Click Stream Tables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [behavioralEvents.length, \" Tables\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(ClickStream, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeftSection, \"KilNtpUy4wg7xksJjKM5eaKnZhM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = LeftSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSection\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","updateTenant","getAllTables","getClickStreamTables","getSummaryTables","getTransactionalTables","getStaleClickStreamTables","getStaleSummaryTables","getStaleTransactionalTables","getFreshClickStreamTables","getFreshSummaryTables","getFreshTransactionalTables","getProcessedRecords","updateName","getWebsiteList","Summary","Transactional","ClickStream","LeftSection","behavioralEvents","state","dataReducer","computedEvents","transactionalEvents","allWebsite","dispatch","handleOnClick","e","target","value","activeLegend","document","getElementsByClassName","dateSelector","countSelector","className","Object","entries","map","item","index","length"],"sources":["/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/components/dashboard/leftSection/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport './index.scss'\nimport {\n    updateTenant,\n    getAllTables,\n    getClickStreamTables,\n    getSummaryTables,\n    getTransactionalTables,\n    getStaleClickStreamTables,\n    getStaleSummaryTables,\n    getStaleTransactionalTables,\n    getFreshClickStreamTables,\n    getFreshSummaryTables,\n    getFreshTransactionalTables,\n    getProcessedRecords,\n    updateName,\n    getWebsiteList,\n} from '../../../actions/dataActions'\nimport Summary from './summary'\nimport Transactional from './transactional'\nimport ClickStream from './clickStream'\n\n\nexport default function LeftSection() {\n    const behavioralEvents = useSelector((state) => state.dataReducer.behavioralEvents)\n    const computedEvents = useSelector((state) => state.dataReducer.computedEvents)\n    const transactionalEvents = useSelector((state) => state.dataReducer.transactionalEvents)\n    const allWebsite = useSelector((state) => state.dataReducer.allWebsite)\n\n\n    const dispatch = useDispatch()\n\n    const handleOnClick = (e) => {\n        // console.log(e.target.value,'event')\n        dispatch(updateTenant(e.target.value))\n        dispatch(getAllTables(e.target.value))\n        dispatch(getClickStreamTables(e.target.value))\n        dispatch(getSummaryTables(e.target.value))\n        dispatch(getTransactionalTables(e.target.value))\n        dispatch(getStaleClickStreamTables(e.target.value, 7))\n        dispatch(getStaleTransactionalTables(e.target.value, 7))\n        dispatch(getStaleSummaryTables(e.target.value, 7))\n        dispatch(getFreshClickStreamTables(e.target.value, 7))\n        dispatch(getFreshTransactionalTables(e.target.value, 7))\n        dispatch(getFreshSummaryTables(e.target.value, 7))\n        dispatch(getProcessedRecords(e.target.value, 1000000))\n\n        dispatch(updateName(\"\"))\n        const activeLegend = document.getElementsByClassName('active-legend')[0]\n        const dateSelector = document.getElementsByClassName('date-selector')[0]\n        const countSelector = document.getElementsByClassName('count-selector')[0]\n        if (activeLegend) {\n            activeLegend.className = 'inactive-legend'\n        }\n        if (dateSelector) {\n            dateSelector.value = '7'\n        }\n        if (countSelector) {\n            countSelector.value = '1000000'\n        }\n    }\n\n    useEffect(() => {\n        dispatch(getClickStreamTables(1))\n        dispatch(getSummaryTables(1))\n        dispatch(getTransactionalTables(1))\n        dispatch(getAllTables(1))\n        dispatch(getWebsiteList())\n\n        \n\n    }, [])\n\n    return (\n\n        <div className='left-section'>\n            <div className=\"dropdown-container\">\n                <p>Select Website</p>\n                {/* <select onChange={handleOnClick}>\n                    <option value={1}>naukri</option>\n                    <option value={2}>naukri-gulf</option>\n                    <option value={3}>first-naukri</option>\n                    <option value={4}>job-hai</option>\n                    <option value={5}>bigshyft</option>\n                    <option value={6}>99acres</option>\n                    <option value={7}>iimjobs</option>\n                    <option value={8}>hirist</option>\n                </select> */}\n                 {allWebsite && \n                <select onChange={handleOnClick}>\n                        {Object.entries(allWebsite).map((item,index) =>{\n                    //  console.log(item[0],'item')\n                           return <option  value={item[0]}>{item[1]}</option>\n\n                        })}\n                  \n                </select>\n                    }\n            </div>\n           \n\n\n            <p className='card-name'><span>Summary Tables</span><span>{computedEvents.length} Tables</span></p>\n            <div className='card'>\n                \n                <Summary />\n            </div>\n\n            <p className='card-name'><span>Transactional Tables</span><span>{transactionalEvents.length} Tables</span></p>\n            <div className='card'>\n                <Transactional />\n            </div>\n\n            <p className='card-name'><span>Click Stream Tables</span><span>{behavioralEvents.length} Tables</span></p>\n            <div className='card'>\n                <ClickStream />\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}