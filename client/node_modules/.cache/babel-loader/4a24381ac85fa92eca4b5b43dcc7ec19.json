{"ast":null,"code":"// import {\n//     authenticationUrl,\n//     authenticationParam,\n//     backEndUrl,\n//     backEndUrlSSIP\n// } from \"../config\"\nconst axios = require('axios'); // export const getEditJsonData=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'UPDATE_INPUT_DATA',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaData=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaDataOne=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_ONE',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchemaDataTwo=(data) => {\n//     return (dispatch) => {\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_TWO',\n//             payload: data\n//         })\n//     }\n// }\n// export const getUpdatingSchema=(fieldData) => {\n//     return (dispatch) => {\n//         // dispatch({\n//         //     type: 'GETTING_SCHEMA_UPDATING_META_RESPONSE',\n//         //     payload: metaData,\n//         // })\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_ONLY_SHOWING_RESPONSE',\n//             payload: fieldData,\n//         })\n//     }\n// }\n\n\nexport const getState = data => {\n  return dispatch => {\n    dispatch({\n      type: 'GETTING_STATE',\n      payload: data\n    });\n  };\n};\nexport const getPostingData = () => {\n  return dispatch => {\n    axios.get(`http://localhost:8080/api/tutorials`, {// params: authenticationParam\n    }).then(response => {\n      let address = {};\n      let state = [];\n      let array = response.data;\n\n      for (let i = 0; i < array.length; i++) {\n        address.location = array[i].state;\n        state.push({\n          'value': array[i].state,\n          'label': array[i].state\n        });\n      }\n\n      dispatch({\n        type: 'GETTING_LOCATION_RESPONSE',\n        payload: response.data\n      });\n      dispatch({\n        type: 'GETTING_STATE',\n        payload: state\n      });\n      dispatch({\n        type: 'GETTING_ADDRESS',\n        payload: address\n      });\n    }).catch(error => {\n      let showError = error.toString();\n    });\n  };\n};","map":{"version":3,"names":["axios","require","getState","data","dispatch","type","payload","getPostingData","get","then","response","address","state","array","i","length","location","push","catch","error","showError","toString"],"sources":["/home/tarun/learning/myOwnProject/nodejs-express-mongodb/frontend/location/src/actions/dataActions.js"],"sourcesContent":["// import {\n//     authenticationUrl,\n//     authenticationParam,\n//     backEndUrl,\n//     backEndUrlSSIP\n// } from \"../config\"\n\nconst axios=require('axios')\n\n\n// export const getEditJsonData=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'UPDATE_INPUT_DATA',\n//             payload: data\n//         })\n\n//     }\n// }\n\n// export const getUpdatingSchemaData=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE',\n//             payload: data\n//         })\n\n//     }\n// }\n// export const getUpdatingSchemaDataOne=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_ONE',\n//             payload: data\n//         })\n\n//     }\n\n\n// }\n// export const getUpdatingSchemaDataTwo=(data) => {\n//     return (dispatch) => {\n\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_FIELD_RESPONSE_TWO',\n//             payload: data\n//         })\n\n//     }\n\n\n// }\n\n\n\n// export const getUpdatingSchema=(fieldData) => {\n//     return (dispatch) => {\n\n//         // dispatch({\n//         //     type: 'GETTING_SCHEMA_UPDATING_META_RESPONSE',\n//         //     payload: metaData,\n\n//         // })\n//         dispatch({\n//             type: 'GETTING_SCHEMA_UPDATING_ONLY_SHOWING_RESPONSE',\n//             payload: fieldData,\n\n//         })\n\n//     }\n// }\nexport const getState=(data) => {\n    return (dispatch) => {\n\n        dispatch({\n            type: 'GETTING_STATE',\n            payload: data\n\n        })\n\n\n    }\n}\n\n\nexport const getPostingData=() => {\n    return (dispatch) => {\n        axios.get(`http://localhost:8080/api/tutorials`,\n            {\n\n                // params: authenticationParam\n\n            }\n        )\n            .then(response => {\n\n\n                let address={}\n                let state=[]\n\n                let array=response.data\n                for(let i=0; i<array.length; i++) {\n                    address.location=array[i].state\n                    state.push({'value': array[i].state,'label': array[i].state})\n                }\n\n                dispatch({\n                    type: 'GETTING_LOCATION_RESPONSE',\n                    payload: response.data\n\n                })\n                dispatch({\n                    type: 'GETTING_STATE',\n                    payload: state\n\n                })\n                dispatch({\n                    type: 'GETTING_ADDRESS',\n                    payload: address\n\n                })\n\n\n            })\n            .catch(error => {\n\n                let showError=error.toString()\n\n            })\n    }\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAACC,OAAO,CAAC,OAAD,CAAnB,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AACA,OAAO,MAAMC,QAAQ,GAAEC,IAAD,IAAU;EAC5B,OAAQC,QAAD,IAAc;IAEjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,eADD;MAELC,OAAO,EAAEH;IAFJ,CAAD,CAAR;EAOH,CATD;AAUH,CAXM;AAcP,OAAO,MAAMI,cAAc,GAAC,MAAM;EAC9B,OAAQH,QAAD,IAAc;IACjBJ,KAAK,CAACQ,GAAN,CAAW,qCAAX,EACI,CAEI;IAFJ,CADJ,EAOKC,IAPL,CAOUC,QAAQ,IAAI;MAGd,IAAIC,OAAO,GAAC,EAAZ;MACA,IAAIC,KAAK,GAAC,EAAV;MAEA,IAAIC,KAAK,GAACH,QAAQ,CAACP,IAAnB;;MACA,KAAI,IAAIW,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,KAAK,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;QAC9BH,OAAO,CAACK,QAAR,GAAiBH,KAAK,CAACC,CAAD,CAAL,CAASF,KAA1B;QACAA,KAAK,CAACK,IAAN,CAAW;UAAC,SAASJ,KAAK,CAACC,CAAD,CAAL,CAASF,KAAnB;UAAyB,SAASC,KAAK,CAACC,CAAD,CAAL,CAASF;QAA3C,CAAX;MACH;;MAEDR,QAAQ,CAAC;QACLC,IAAI,EAAE,2BADD;QAELC,OAAO,EAAEI,QAAQ,CAACP;MAFb,CAAD,CAAR;MAKAC,QAAQ,CAAC;QACLC,IAAI,EAAE,eADD;QAELC,OAAO,EAAEM;MAFJ,CAAD,CAAR;MAKAR,QAAQ,CAAC;QACLC,IAAI,EAAE,iBADD;QAELC,OAAO,EAAEK;MAFJ,CAAD,CAAR;IAOH,CApCL,EAqCKO,KArCL,CAqCWC,KAAK,IAAI;MAEZ,IAAIC,SAAS,GAACD,KAAK,CAACE,QAAN,EAAd;IAEH,CAzCL;EA0CH,CA3CD;AA4CH,CA7CM"},"metadata":{},"sourceType":"module"}